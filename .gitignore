# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
*.idea
*.readmes
*.vscode
*.txt
*yarn.lock
.yarn
.firebase
*.ipynb

# Project-specific ignores
application_layer/.firebaserc
application_layer/firebase.json
application_layer/firestore.indexes.json
application_layer/firestore.rules
file_appender.py

# Blockchain Layer - Development Environment
blockchain_layer/deployment/development/.env
blockchain_layer/deployment/staging/.env
blockchain_layer/deployment/production/.env
blockchain_layer/core/data_storage/app/img/
blockchain_layer/core/data_storage/app/static/
blockchain_layer/core/xrpl_service/app/static/

# Docker & Container Files
docker-compose.override.yml
.dockerignore
Dockerfile.dev
Dockerfile.prod

# Database Files
*.db
*.sqlite
*.sqlite3
postgres_data/
redis_data/
solana_data/
xrpl_data/
prometheus_data/
grafana_data/

# Blockchain & Crypto
*.pem
*.key
*.crt
*.p12
*.pfx
keypair.json
wallet.json
private_keys/
credentials/
secrets/

# XRPL Specific
xrpl_wallet_*
rippled.cfg.local
*.wallet

# Solana Specific
.anchor/
target/
test-ledger/
validator-keypair.json
faucet-keypair.json
*.so
Anchor.toml.local

# Smart Contracts
artifacts/
cache/
typechain/
deployments/
.openzeppelin/

# Node.js & TypeScript
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*
*.tsbuildinfo
.npm
.eslintcache
.stylelintcache

# Build outputs
dist/
build/
out/
.next/
.nuxt/
.vuepress/dist
.serverless/

# Testing
coverage/
.nyc_output
junit.xml
test-results/
playwright-report/
test-results.xml

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Monitoring & Metrics
prometheus/
grafana/
monitoring_data/

# Temporary files
tmp/
temp/
.tmp/
.temp/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~
.project
.classpath
.settings/

# Backup files
*.bak
*.backup
*.old
*.orig

# Archive files
*.zip
*.tar.gz
*.rar
*.7z

# Flutter/Dart (for presentation layer)
presentation_layer/the_construct/android/
presentation_layer/the_construct/ios/
presentation_layer/the_construct/build/
presentation_layer/the_construct/.flutter-plugins
presentation_layer/the_construct/.flutter-plugins-dependencies
presentation_layer/the_construct/.packages
presentation_layer/the_construct/pubspec.lock

# Svelte (for presentation layer)
presentation_layer/svelte_the_construct/.svelte-kit/
presentation_layer/svelte_the_construct/package/

# Firebase
.firebase/
.firebaserc.local
firebase-debug.log
firestore-debug.log
ui-debug.log

# Google Cloud
gcloud/
service-account-key.json
google-credentials.json

# AWS
.aws/
aws-credentials.json

# Kubernetes
*.kubeconfig
kube-config
k8s-secrets/

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl
terraform.tfvars
terraform.tfvars.json

# Load testing
k6-results/
artillery-results/

# Security scanning
security-reports/
vulnerability-reports/

# Performance profiling
*.prof
*.pprof
flame-graphs/

# Local development overrides
local.yml
local.yaml
local.json
local.env
dev.env
development.env
staging.env
production.env

# API Documentation
api-docs/generated/
swagger-ui/
redoc/

# Certificate files
ssl/
certs/
tls/

# Blockchain test data
test-accounts/
test-wallets/
mock-data/
seed-data.local.sql

# Trading bot data
trading-history/
market-data/
backtest-results/

# Oracle data cache
oracle-cache/
price-feeds/
external-data/

