version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: the_construct_postgres
    environment:
      POSTGRES_DB: the_construct
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - blockchain_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d the_construct"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: the_construct_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ../redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - blockchain_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  data_storage_service:
    build:
      context: ../../core/data_storage
      dockerfile: Dockerfile
    container_name: the_construct_data_storage
    environment:
      - PORT=8080
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=the_construct
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_MIN_POOL_SIZE=5
      - POSTGRES_MAX_POOL_SIZE=20
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - GOOGLE_APPLICATION_CREDENTIALS=/app/service-account.json
    ports:
      - "8003:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - blockchain_network
    volumes:
      - ./service-account.json:/app/service-account.json:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: the_construct_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@theConstruct.dev
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - blockchain_network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  redis_commander:
    image: rediscommander/redis-commander:latest
    container_name: the_construct_redis_commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - blockchain_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  blockchain_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
