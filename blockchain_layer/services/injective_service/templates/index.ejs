<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>The Construct Marketplace</title>
    <link rel="stylesheet" href="styles.css">
</head>

<body>
    <button class="nav-drawer-toggle" id="nav-drawer-toggle"></button>
    <nav class="navbar">
        <div class="logo">
            <img src="logo-200.png" alt="The Construct Logo">
        </div>
        <ul>
            <li><a href="https://the-construct-401518.web.app/">Home</a></li>
            <li><a href="/" class="active">Marketplace</a></li>
            <!-- <li><a href="/profile">Profile</a></li> -->
            <li><a href="#">About</a></li>
            <li><a href="#">FAQ</a></li>
        </ul>
        <button class="connect-button" id="connect-wallet-button">Wallet</button>
        
            <i class="fas fa-bars"></i>
        </button>
    </nav>
    <header class="main-header">
        <h1>Welcome to The Construct Marketplace</h1>
        <input type="text" class="search-bar" id="search-bar" placeholder="Search for robotic parts and AI software...">
    </header>
    <h2 class="product-group-title">Robots</h2>
    <section class="product-list" id="product-list-robots">
        <!-- Dynamic robot list content will be loaded here -->
    </section>

    <h2 class="product-group-title">Software</h2>
    <section class="product-list" id="product-list-software">
        <!-- Dynamic software list content will be loaded here -->
    </section>

    <h2 class="product-group-title">Designs</h2>
    <section class="product-list" id="product-list-design">
        <!-- Dynamic software list content will be loaded here -->
    </section>
    <nav class="nav-drawer">
        <ul>
            <li><a href="https://the-construct-401518.web.app/">Home</a></li>
            <li><a href="/" class="active">Marketplace</a></li>
            <!-- <li><a href="/profile">Profile</a></li> -->
            <li><a href="#">About</a></li>
            <li><a href="#">FAQ</a></li>
        </ul>
    </nav>
</body>
<script>
    // Add event listener to the "Connect Wallet" button
    document.getElementById('connect-wallet-button').addEventListener('click', async () => {
        console.log("Clicked");
        const response = await fetch('/account/connect');
        const jsonResponse = await response.json();
        // If an address is returned, update the text of the button to the address
        if (jsonResponse.address) {
            document.getElementById('connect-wallet-button').textContent = jsonResponse.address.substring(0, 10) + '...';
        }
    });

</script>
<script>
    window.onload = async () => {
        if (!window.keplr) {
            alert("Please install keplr extension");
        } else {
            const chainId = "injective-888";
            // Enabling before using the Keplr is recommended.
            // This method will ask the user whether to allow access if they haven't visited this website.
            // Also, it will request that the user unlock the wallet if the wallet is locked.
            await window.keplr.enable(chainId);
            const offlineSigner = window.keplr.getOfflineSigner(chainId);
            // You can get the address/public keys by `getAccounts` method.
            // It can return the array of address/public key.
            // But, currently, Keplr extension manages only one address/public key pair.
            // XXX: This line is needed to set the sender address for SigningCosmosClient.
            const accounts = await offlineSigner.getAccounts();
            if (accounts[0].address) {
            document.getElementById('connect-wallet-button').textContent = accounts[0].address.substring(0, 10) + '...';
        }
        }
    }
</script>
<script src="scripts/robot_script.js"></script>
<script src="scripts/software_script.js"></script>
<script src="scripts/designs_script.js"></script>

<script>
    document.getElementById('nav-drawer-toggle').addEventListener('click', () => {
        const navDrawer = document.querySelector('.nav-drawer');
        navDrawer.classList.toggle('active');
    });

    // Add event listener to the document to hide the nav-drawer when clicked outside of it
    document.addEventListener('click', (event) => {
        const navDrawer = document.querySelector('.nav-drawer');
        if (!navDrawer.contains(event.target)) {
            navDrawer.classList.remove('active');
        }
    });
</script>

